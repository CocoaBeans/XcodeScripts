#!/bin/bash

############################################################################################################################
###
###		genstrings.functions
###
###		Bash functions to generate .strings files from NSLocalizedString...() macros
###		Includes function to convert strings to UTF-8 to remove Xcode warnings
###		
###		Copyright (c) 2013 Kevin Ross. All rights reserved.
###		
###		Redistribution and use in source and binary forms, with or without modification,
###		are permitted provided that the following conditions are met:
###		
###		Redistributions of source code must retain the above copyright notice, this list of conditions and the
###		following disclaimer.
###		Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
###		following disclaimer in the documentation and/or other materials provided with the distribution.
###		
###		THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
###		INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
###		DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
###		SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
###		SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
###		WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
###		USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
###
###		Mutator:		Mutated:		Mutation:
###		--------		--------		---------
###		Kross			01.13.13		Initial Version
###
############################################################################################################################


GenerateProjectStrings()
{
	PROJECT_PATH="${PROJECT_DIR}/${PROJECT}"
	GenerateStringsForPath "${PROJECT_PATH}"
}


GenerateStringsForPath()
{
	GENSTRINGS_TARGET_PATH="${1}"
	find "${GENSTRINGS_TARGET_PATH}" -name "*.m" \
	-exec genstrings -o "${GENSTRINGS_TARGET_PATH}/en.lproj" {} +

	ConvertStringsToUTF8 "${GENSTRINGS_TARGET_PATH}"
}

ConvertStringsToUTF8()
{
	FOLDER_TO_SEARCH=`echo "${1}"`

	# We want to make sure our .strings files are UTF8 to remove the build warnings so we'll loop through all of the ".strings" files
	for f in `find "${FOLDER_TO_SEARCH}" -name "*.strings" | sed 's/\ //g'`; do
		echo "Converting to UTF-8: $f"

		# Find the file encoding for the file to be converted
		FILE_ENCODING=`file -b --mime-encoding "$f"`

		if [[ $FILE_ENCODING == ERROR* ]]; then
			FILE_ENCODING=`awk -F "\)" '{print $2}'`
		fi

# Convert the file to UTF8
		iconv -f "$FILE_ENCODING" -t "UTF-8" "$f" > "$f.utf8"

# If the convert command failed then we'll exit with an error to stop the build and fix the problem
		if [[ "$?" -ne 0 ]]; then
			exit 1
		fi

# Move replace the original file with the converted UTF8 file 
		mv -f "$f.utf8" "$f"
	done
}
